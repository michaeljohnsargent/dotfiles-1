#!/usr/bin/env bash

BLACK=30
RED=31
GREEN=32
YELLOW=33
BLUE=34
MAGENTA=35
CYAN=36
LIGHT_GREY=37
DARK_GREY=90
LIGHT_RED=91
LIGHT_GREEN=92
LIGHT_YELLOW=93
LIGHT_BLUE=94
LIGHT_MAGENTA=95
LIGHT_CYAN=96

# Ask for the administrator password upfront
sudo -v

say() {
  if [ ! -z $2 ]; then
    COLOR=$2
  else
    COLOR=0
  fi

  echo -e "\033["$COLOR"m$1\033[0m"
}

say_dim() {
  echo -e "\033[2m$1\033[0m"
}

announce() {
  if [ ! -z $2 ]; then
    COLOR=$2
  else
    COLOR=0
  fi

  echo -en "\033["$COLOR"m$1 ...\033[0m"
}

perform() {
  command=$1
  output=`$command 2>&1`
  result=$?
  if [[ $result -eq 0 ]]; then
    echo -e "\033[32mOK\033[0m"
  else
    echo -e "\033[31mERROR\033[0m"
    echo -e "$output" >&2
    exit $result
  fi
}

#brew_expand_alias() {
#  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
#}

add_repo() {
  announce "Adding repo $1"
  perform "sudo add-apt-repository --yes $1"
}

install() {
  if is_installed "$1"; then
    say "$1 already installed"
  else
    announce "Installing $1"
    perform "sudo apt-get --yes install $1"
  fi
}

is_installed() {
  dpkg -s $1 > /dev/null 2>&1
  [ $? -eq 0 ]
}

#is_upgradable() {
#  local name="$(brew_expand_alias "$1")"
#
#  brew outdated --quiet "$name" >/dev/null
#  [[ $? -ne 0 ]]
#}

link() {
  ln -nfs $1 $2
}

DATA_PATH=/media/cjharrelson/Data 
#link '/media/cjharrelson/Data/.api-tokens.yml' '~/.api-tokens.yml' 
ln -nfs $DATA_PATH/.api-tokens.yml ~/.api-tokens.yml 
ln -nfs $DATA_PATH/.digital-ocean ~/.digital-ocean
ln -nfs $DATA_PATH/.ey-cloud.yml ~/.ey-cloud.yml
ln -nfs $DATA_PATH/.eyrc ~/.eyrc
ln -nfs $DATA_PATH/.irb-history ~/.irb-history
ln -nfs $DATA_PATH/.eyrc ~/.eyrc
ln -nfs $DATA_PATH/.pry_history ~/.pry_history
ln -nfs $DATA_PATH/.s3cfg ~/.s3cfg
ln -nfs $DATA_PATH/.s3-credentials.yml ~/.s3-credentials.yml

ZSH_DIRECTORY=~/.oh-my-zsh
if [ ! -d "$ZSH_DIRECTORY" ]; then
  git clone git@github.com:midas/oh-my-zsh.git $ZSH_DIRECTORY
  cd $ZSH_DIRECTORY
  git checkout jason
else
  say "oh-my-zsh already installed"
fi

if [[ "$SHELL" != */zsh ]]; then
  install 'zsh'
  say "Changing shell to zsh"
  chsh -s $(which zsh)
fi

DOTFILES_DIRECTORY=~/.dotfiles
if [ ! -d "$DOTFILES_DIRECTORY" ]; then
  git clone git@github.com:midas/dotfiles.git ~/.dotfiles
  ~/.dotfiles/bootstrap
else
  say "dotfiles already installed"
fi

NEOBUNDLE_DIRECTORY=~/.vim/bundle/neobundle.vim
if [ ! -d "$NEOBUNDLE_DIRECTORY" ]; then
  mkdir -p ~/.vim/bundle
  git clone https://github.com/Shougo/neobundle.vim $NEOBUNDLE_DIRECTORY
else
  say "Neobundle already installed"
fi

install 'curl'

# Install RVM
rvm --version > /dev/null 2>&1
if [ $? != 0 ]; then
  install 'gpgv2'
  gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
  \curl -sSL https://get.rvm.io | bash -s stable
else
  say "RVM already installed"
fi

#say "Configuring Bundler for faster, parallel gem installation ..."
#number_of_cores=$(sysctl -n hw.ncpu)
#bundle config --global jobs $((number_of_cores - 1))

THEMES_DIRECTORY=~/.themes
if [ ! -d "$THEMES_DIRECTORY" ]; then
  mkdir $THEMES_DIRECTORY
fi

YOSEMBIANCE_DIRECTORY=$THEMES_DIRECTORY/Yosembiance
if [ ! -d "$YOSEMBIANCE_DIRECTORY" ]; then
  say "Installing theme Yosembiance"
  cd $THEMES_DIRECTORY
  wget https://github.com/bsundman/Yosembiance/archive/master.zip
  unzip master.zip
  mv $THEMES_DIRECTORY/Yosembiance-master/Yosembiance $THEMES_DIRECTORY/.
  rm -rf $THEMES_DIRECTORY/Yosembiance-master
  rm $THEMES_DIRECTORY/master.zip
  cd ~
else
  say "Theme Yosembiance already installed"
fi

FONTS_DIRECTORY=/usr/share/fonts/truetype/custom
if [ ! -d "$FONTS_DIRECTORY" ]; then
  sudo mkdir -p $FONTS_DIRECTORY
fi 

if [ ! -f "$FONTS_DIRECTORY/Monaco_Linux.ttf" ]; then
  wget -c https://github.com/cstrap/monaco-font/raw/master/Monaco_Linux.ttf
  sudo mv Monaco_Linux.ttf /usr/share/fonts/truetype/custom/.
fi

sudo fc-cache -f -v

SOURCES_DIR=/etc/apt/sources.list.d
if [ ! -f "$SOURCES_DIR/google.list" ]; then
  say "Adding Google Chrome repo to sources"
  sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> $SOURCES_DIR/google.list'
fi

add_repo 'ppa:noobslab/themes'
add_repo 'ppa:numix/ppa'
add_repo 'ppa:nvbn-rm/ppa'
sudo apt-get update

install 'numix-gtk-theme' 
install 'numix-icon-theme-circle'
install 'numix-wallpaper-notd'
install 'ambiance-crunchy'

install 'autokey-gtk'
install 'docker.io'
install 'everpad'
install 'git'
install 'google-chrome-stable'
install 'gpgv2'
install 'gnome-tweak-tool'
install 'python-dev'
install 'python-pip'
install 'terminator'
install 'tmux'
install 'unity-tweak-tool'

#if [ ! -f ~/Library/Fonts/Monaco+for+Powerline.otf ]; then
#  open ~/.dotfiles/powerline-fonts/Monaco+for+Powerline.otf
#else
#  say "Monaco+for+Powerline.otf already installed"
#fi

echo "Done. Note that some of these changes require a logout/restart to take effect."
